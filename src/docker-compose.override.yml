version: '3.4'

services:
  mongo:
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${Password}
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_data:/data/configdb

  redis:
    container_name: redis
    restart: always
    ports:
      - "6379:6370"
    volumes:
      - redis_data:/data

  postgres:
    container_name: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=${Password}
      - POSTGRES_DB=DiscountDB
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mssql:
    container_name: mssql
    environment:
      - SA_PASSWORD=${Password}
      - ACCEPT_EULA=Y
    restart: always
    ports:
      - "11433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql/data

  rabbitmq:
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=${Password}
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=${Password}
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
      - pgadmin_data:/var/lib/pgadmin

  mongo.express:
    container_name: mongo.express
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=${Password}
      - ME_CONFIG_MONGODB_AUTH_USERNAME=admin
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=${Password}
    restart: always
    depends_on:
      - mongo
    ports:
      - "8081:8081"

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  elasticsearch:
    container_name: elasticsearch
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g

  graylog:
    container_name: graylog
    environment: 
      - GRAYLOG_PASSWORD_SECRET=${Password}
      - GRAYLOG_ROOT_PASSWORD_SHA2=${Password_SHA2}
      - GRAYLOG_MONGODB_URI=mongodb://admin:${Password}@mongo:27017/graylog?authSource=admin
    restart: always
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9001:9000
    volumes:
      - graylog_data:/usr/share/graylog/data

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DatabaseSettings__ConnectionString=mongodb://admin:${Password}@mongo:27017
      - GrayLog__Host=graylog
      - GrayLog__Port=12201
      - GrayLog__Protocol=UDP
      - LogSource__LogSource=Catalog.API
    depends_on:
      - mongo
    ports:
      - "8000:80"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CacheSettings__ConnectionString=redis:6379
      - GrpcSettings__DiscountUrl=http://discount.api:5003
      - EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672
      - GrayLog__Host=graylog
      - GrayLog__Port=12201
      - GrayLog__Protocol=UDP
      - LogSource__LogSource=Basket.API
    depends_on:
      - redis
    ports:
      - "8001:80"

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=Server=postgres;Port=5432;Database=DiscountDB;User Id=admin;Password=${Password};"
      - GrayLog__Host=graylog
      - GrayLog__Port=12201
      - GrayLog__Protocol=UDP
      - LogSource__LogSource=Discount.API
    depends_on:
      - postgres
    ports:
      - "8002:5002"
      - "8003:5003"

  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__OrderingConnectionString=Server=mssql;Database=OrderDb;User Id=sa;Password=${Password}
      - EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672
      - GrayLog__Host=graylog
      - GrayLog__Port=12201
      - GrayLog__Protocol=UDP
      - LogSource__LogSource=Ordering.API
    depends_on:
     - mssql
    ports:
     - "8004:80"